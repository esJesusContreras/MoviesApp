{"version":3,"sources":["components/api/updateIATFAudit.js","components/globals/IATFAuditUpdateTypes.js","components/context/IATFAuditContext.js","components/helpers/formatDate.js","components/helpers/setStartDate.js","components/ProjectManagerReviewMWF.js","assets/download-cloud-icon-15.png","assets/icon-delete-19.png","components/api/uploadReport.js","components/api/getReport.js","components/api/downloadReport.js","components/api/deleteReport.js","components/globals/ReportTypes.js","components/helpers/getCurrentDate.js","components/FileDropZone.js","components/helpers/getDropZoneMessage.js","components/api/getZippedFileNames.js","components/ShowMWFileOptions.js","components/ShowV1FileOptions.js","components/ShowV2FileOptions.js","components/ShowZippedFiles.js","components/AuditDocumentationMWF.js","components/context/AuditContext.js","components/Header.js","components/api/getLog.js","components/helpers/formatDateTime.js","components/Log.js","components/NonConformities.js","components/api/getLastNote.js","components/api/getNotes.js","components/api/insertNote.js","components/hooks/useForm.js","components/AddNotes.js","components/helpers/getCurrentDateTime.js","components/Notes.js","components/globals/IATFAuditStatus.js","components/Status.js","components/AuditDocumentationV1.js","components/globals/VetoPersonTypes.js","components/ProjectManagerReviewV1.js","components/api/downloadTemplates.js","components/Download.js","components/DownloadAuditTemplates.js","components/api/getAudit.js","components/api/getIATFAudit.js","components/RequiredInformation.js","components/AuditDocumentationV2.js","components/ProjectManagerReviewV2.js","components/Approval.js","components/InitialStepV2.js","components/AuditInformation.js","components/VetoRejection.js","components/MainApp.js","index.js"],"names":["updateIATFAudit","data","type","a","id","url","configData","server_url","fetch","method","headers","body","JSON","stringify","resp","json","response","IATFAuditUpdateTypes","STATUS","INITIAL_INFORMATION","NON_CONFORMITIES","PM_REVIEW_MW","PM_REVIEW_V1","INITIAL_STEP_V2","REJECTION","PM_REVIEW_V2","APPROVAL","IATFAuditContext","createContext","formatDate","dateStr","formattedDate","Date","d","getDate","m","getMonth","y","getFullYear","length","setStartDate","vetoapproveddate","startDate","ProjectManagerReviewMWF","audit","useContext","auditID","useState","docsubmitsap","docsubmitdate","formState","setFormState","className","name","checked","onChange","e","target","htmlFor","value","selected","date","newDate","handleDateChange","onClick","then","saved","console","log","uploadReport","IATFauditID","fileName","file","formData","FormData","append","getReport","uploadDate","downloadReport","reportID","blob","deleteReport","ReportTypes","UNKNOWN","MW_ZIP_FILE","MW_QUESTIONNAIRE_OFFER","MW_QUESTIONNAIRE_PLANNING","MW_CARA_REPORT_PRELIMINARY","MW_CARA_NC_REPORT_PRELIMINARY","V1_ZIP_FILE","V1_APPLICATION_EXTENDED","V1_READINESS_PRE_CHECK","V1_STAGE1_AUDIT_PLAN","V1_QM_SYSTEM","V1_PROCESS_OVERVIEW","V1_STAGE1_AUDIT_REPORT","V1_AUDIT_PLAN","V1_CARA_RL_REPORT","V1_SCORECARDS","V1_COVER_SHEET","V1_HANDWRITTEN_NOTES","V1_RELEASE_PROTOCOL","V1_CERTIFICATE_ORDER","V1_AUDIT_PLAN_RELEASE","V1_REQUEST_TRANSFER_AUDIT","V1_PREVIOUS_CB_REPORTS","V1_PREVIOUS_CB_EVIDENCE","V1_PREVIOUS_CB_CERTIFICATE","V1_IATF_REMOTE","V1_OTHER_DOCUMENTS","V2_ZIP_FILE","V2_CARA_REPORT_FINAL","V2_CARA_NC_REPORT_FINAL","V2_NCM_EVIDENCES","V2_RELEASE_PROTOCOL","V2_AUDIT_PLAN","V2_CARA_SPA","V2_DE_CERT","V2_OTHER_DOCUMENTS","APPROVAL_EMAIL","getCurrentDate","FileDropZone","fileType","setZipFileName","dropZoneMessage","message","ReportType","getDropZoneMessage","auditContext","auditid","report","setReport","onDrop","useCallback","acceptedFiles","forEach","path","catch","error","useEffect","fileExtension","useDropzone","maxFiles","accept","fileRejections","getRootProps","getInputProps","displayDropZoneMessage","map","errors","displayUploadedFileDetails","title","disabled","Blob","fileURL","URL","createObjectURL","document","getElementById","filename","href","download","click","window","revokeObjectURL","src","downloadImage","alt","deleteImage","getZippedFileNames","reports","ShowMWFileOptions","handleOnChange","ShowV1FileOptions","ShowV2FileOptions","ShowZippedFiles","zipFileName","zippedFiles","setZippedFiles","find","z","parseInt","AuditDocumentationMWF","AuditContext","Header","customerName","projectNumber","siteName","auditTypeName","getLog","formatDateTime","timeSeparator","h","getHours","mm","getMinutes","Log","auditList","setAuditList","height","description","creationDate","NonConformities","majorncnumber","minorncnumber","specialauditmajordate","handleInputChange","size","getLastNote","notes","getNotes","insertNote","auditId","useForm","initialState","values","setValues","reset","handleInputCheck","AddNotes","show","onHide","setNote","newNote","setNewNote","noteList","setNoteList","Modal","centered","backdrop","keyboard","Title","Body","note","placeholder","Button","Footer","Notes","setShow","variant","IATFAuditStatus","Status","status","statusdescription","setAudit","style","backgroundColor","getBackgroundColor","statusDescription","statusNumber","IATFaudit","AuditDocumentationV1","VetoPersonTypes","CRITICAL_LOCATION","TO_BE_DEFINED","DEFINED_BY_GERMANY","ProjectManagerReviewV1","IATFAudit","veto1docsubmitted","veto1docsubmitdate","vetopersonname","vetopersonemail","vetopersontype","downloadTemplates","Download","hidden","DownloadAuditTemplates","getAudit","standardName","projectManager","getIATFAudit","ncreviewed","ncReviewed","nc100solved","nC100Solved","certificaterequired","certificateRequired","docSubmitSAP","docSubmitDate","majorNCNumber","minorNCNumber","specialauditsolveddate","specialAuditSolvedDate","specialAuditMajorDate","veto1DocSubmitted","veto1DocSubmitDate","vetoPersonName","vetoPersonEmail","vetoPersonType","veto2docsubmitted","veto2DocSubmitted","veto2docsubmitdate","veto2DocSubmitDate","clientncdocumentationsent","clientNCDocumentationSent","vetoapproved","vetoApproved","vetoApprovedDate","vetorejected","vetoRejected","vetorejecteddate","vetoRejectedDate","vetofeedback","vetoFeedback","RequiredInformation","width","AuditDocumentationV2","ProjectManagerReviewV2","Approval","InitialStepV2","AuditInformation","VetoRejection","rows","MainApp","setIATFaudit","Provider","URLSearchParams","location","search","get","ReactDOM","render"],"mappings":"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","file":"static/js/main.35ef5544.chunk.js","sourcesContent":["\r\nimport configData from \"../config/config.json\";\r\n\r\nexport const updateIATFAudit = async( data, type ) => {\r\n\r\n    // console.log('data');\r\n    // console.log(data);\r\n\r\n    const { id } = data;\r\n\r\n    const url = `${configData.server_url}/api/IATFAudit/${ id },${ type }`;\r\n\r\n    const resp = await fetch( url, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n    });\r\n\r\n    // .then(response => response.json())\r\n    // .then(data => {\r\n    //     console.log('Success:', data);\r\n    // })\r\n    // .catch((error) => {\r\n    //     console.error('Error:', error);\r\n    // });\r\n\r\n    const response = await resp.json();\r\n\r\n    return( response );\r\n}\r\n\r\n","\r\nexport const IATFAuditUpdateTypes = {\r\n    STATUS: 1,\r\n    INITIAL_INFORMATION: 2,\r\n    NON_CONFORMITIES: 3,\r\n    PM_REVIEW_MW: 4,\r\n    PM_REVIEW_V1: 5,\r\n    INITIAL_STEP_V2: 6,\r\n    REJECTION: 7,\r\n    PM_REVIEW_V2: 8,\r\n    APPROVAL: 9\r\n}\r\n\r\nexport default IATFAuditUpdateTypes;","\r\nimport { createContext } from \"react\";\r\n\r\n\r\nexport const IATFAuditContext = createContext(null);","\r\nexport const formatDate = (dateStr) => {\r\n\r\n\tlet formattedDate = new Date(dateStr);\r\n\tlet d = '' + formattedDate.getDate();\r\n\tlet m = '' + (formattedDate.getMonth() + 1); // JavaScript months are 0-11\r\n\tlet y = formattedDate.getFullYear();\r\n\r\n\tif (d.length < 2) d = '0' + d;\r\n\tif (m.length < 2) m = '0' + m;\r\n\r\n\t//return (m + \"/\" + d + \"/\" + y);\r\n\treturn (y + \"-\" + m + \"-\" + d);\r\n\t\r\n}\r\n\r\n","\r\nexport const setStartDate = (vetoapproveddate) => {\r\n\r\n    let startDate = null;\r\n    if( vetoapproveddate ){\r\n\r\n        const myString = vetoapproveddate + \"T00:00\";\r\n\r\n        // console.log('myString');\r\n        // console.log(myString);\r\n\r\n        let formattedDate = new Date(myString);\r\n        let d = '' + formattedDate.getDate();\r\n        let m = '' + (formattedDate.getMonth() + 1); // JavaScript months are 0-11\r\n        let y = formattedDate.getFullYear();\r\n\r\n        if (m.length < 2) m = '0' + m;\r\n\t    if (d.length < 2) d = '0' + d;\r\n\r\n        // console.log(\"d=\"+d);\r\n        // console.log(\"m=\"+m);\r\n        // console.log(\"y=\"+y);\r\n\r\n        startDate = new Date( y + \"-\" + m + \"-\" + d + \"T00:00\" );\r\n    }    \r\n\r\n    // console.log('dentro startDate');\r\n    // console.log(startDate);\r\n\r\n    return ( startDate )\r\n}\r\n","\r\nimport React, { useContext, useState } from 'react'\r\nimport { updateIATFAudit } from './api/updateIATFAudit'\r\nimport IATFAuditUpdateTypes from './globals/IATFAuditUpdateTypes.js';\r\nimport { IATFAuditContext } from './context/IATFAuditContext'\r\nimport DatePicker from \"react-datepicker\";\r\nimport { formatDate } from './helpers/formatDate';\r\nimport { setStartDate } from './helpers/setStartDate';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nconst ProjectManagerReviewMWF = () => {\r\n\r\n    const audit = useContext(IATFAuditContext);\r\n\r\n    const auditID = audit.data.id;\r\n\r\n    const [formState, setFormState] = useState({\r\n        id: auditID,\r\n        docsubmitsap: audit.data.docsubmitsap || false,\r\n        docsubmitdate: audit.data.docsubmitdate ? formatDate(audit.data.docsubmitdate) : null,\r\n    });\r\n\r\n    const {docsubmitsap, docsubmitdate} = formState;\r\n\r\n    const startDate = setStartDate(docsubmitdate);\r\n\r\n    // useEffect( () => {\r\n        \r\n    //     getIATFAudit(auditID)\r\n    //     .then( audit => {\r\n    //         setFormState({\r\n    //             id: audit.id,\r\n    //             ncreviewed: audit.ncreviewed,\r\n    //             nc100solved: audit.nc100solved,\r\n    //             certificaterequired: audit.certificaterequired,\r\n    //             docsubmitsap: audit.docsubmitsap\r\n    //         })\r\n    //     });\r\n    //     // .catch( console.warn('hubo un error') );\r\n\r\n    // }, [auditID]);    \r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [e.target.name]:e.target.checked\r\n        })\r\n\r\n    }\r\n\r\n    // const handleInputTextChange = (e) => {\r\n\r\n    //     setFormState({\r\n    //         ...formState,\r\n    //         [e.target.name]:e.target.value\r\n    //     })\r\n\r\n    // }\r\n\r\n    const handleDateChange = (date) => {\r\n\r\n        const newDate = date ? formatDate(date) : null;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            docsubmitdate:newDate\r\n        })\r\n    }\r\n\r\n    const save = () => {\r\n        const resp = updateIATFAudit( formState, IATFAuditUpdateTypes.PM_REVIEW_MW );\r\n\r\n        resp.then(saved => {\r\n            console.log('Success:', saved);\r\n            // if ( saved ){\r\n            //     var element = document.getElementById(\"save\");\r\n            //     element.classList.add(\"btn-green\");\r\n            //     element.innerHTML = 'Saved !';\r\n            // }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"project-manager-WF-review\">\r\n            <h5>Project Manager Review</h5>\r\n            <div className=\"project-manager-WF-review-checkboxes\">\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <div className=\"form-switch\">\r\n                                    <input \r\n                                        className=\"form-check-input\"\r\n                                        type=\"checkbox\" \r\n                                        id=\"docsubmitsap\" \r\n                                        name=\"docsubmitsap\" \r\n                                        checked={docsubmitsap} \r\n                                        onChange={handleInputChange}\r\n                                    />\r\n                                    <label htmlFor=\"docsubmitsap\">&nbsp;&nbsp;Audit documents already uploaded to SAP on &nbsp;&nbsp;</label>\r\n                                </div>\r\n                            </td>\r\n                            <td>\r\n                                <DatePicker \r\n                                    name=\"docsubmitdate\" \r\n                                    value={docsubmitdate} \r\n                                    selected={startDate} \r\n                                    className=\"datepicker\"                                    \r\n                                    onChange={(date) => handleDateChange(date)} />\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>                                \r\n            </div>\r\n            <br/>\r\n            <div className=\"btn-wrapper\">\r\n                <button \r\n                    id=\"save\" \r\n                    className=\"btn-blue\" \r\n                    onClick={save}>\r\n                        SAVE\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectManagerReviewMWF\r\n","export default __webpack_public_path__ + \"static/media/download-cloud-icon-15.71e099f5.png\";","export default __webpack_public_path__ + \"static/media/icon-delete-19.5a486858.png\";","\r\nimport configData from \"../config/config.json\";\r\n\r\nexport const uploadReport = async(IATFauditID, auditID, type, fileName, file) => {\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"fileName\", fileName);\r\n    formData.append(\"formFile\", file);\r\n\r\n    const url = `${configData.server_url}/api/report/?IATFauditID=${IATFauditID}&auditID=${auditID}&type=${type}`;\r\n\r\n    const resp = await fetch( url, {\r\n        method: 'POST',\r\n        body: formData\r\n    });\r\n\r\n    const response = await resp.json();\r\n\r\n    return( response );\r\n}\r\n\r\n","\r\nimport configData from \"../config/config.json\";\r\n\r\nexport const getReport = async(IATFauditID, type) => {\r\n\r\n    const url = `${configData.server_url}/api/report/${IATFauditID},${type}`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const data = await resp.json();\r\n\r\n    return {\r\n        id: data.id,\r\n        name: data.name,\r\n        uploadDate: data.uploadDate,\r\n        type: data.type,\r\n    };\r\n\r\n}\r\n\r\n","\r\nimport configData from \"../config/config.json\";\r\n\r\nexport const downloadReport = async( auditID, reportID ) => {\r\n    \r\n    const url = `${configData.server_url}/api/report/file/${auditID},${reportID}`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const data = await resp.blob();  \r\n\r\n    return { data };\r\n}\r\n","\r\nimport configData from \"../config/config.json\";\r\n\r\nexport const deleteReport = async(auditID, reportID) => {\r\n\r\n    const url = `${configData.server_url}/api/report/${auditID},${reportID}`;\r\n\r\n    const resp = await fetch( url, {\r\n        method: 'DELETE'\r\n    });\r\n\r\n    const response = await resp.json();\r\n\r\n    return( response );\r\n}\r\n\r\n","\r\nexport const ReportTypes = {\r\n    UNKNOWN: 0,\r\n    MW_ZIP_FILE: 1,\r\n    MW_QUESTIONNAIRE_OFFER: 2,\r\n    MW_QUESTIONNAIRE_PLANNING: 3,\r\n    MW_CARA_REPORT_PRELIMINARY: 4,\r\n    MW_CARA_NC_REPORT_PRELIMINARY: 5,\r\n    V1_ZIP_FILE: 6,\r\n    V1_APPLICATION_EXTENDED: 7,\r\n    V1_READINESS_PRE_CHECK: 8,\r\n    V1_STAGE1_AUDIT_PLAN: 9,\r\n    V1_QM_SYSTEM: 10,\r\n    V1_PROCESS_OVERVIEW: 11,\r\n    V1_STAGE1_AUDIT_REPORT: 12,\r\n    V1_AUDIT_PLAN: 13,\r\n    V1_CARA_RL_REPORT: 14,\r\n    V1_SCORECARDS: 15,\r\n    V1_COVER_SHEET: 16,\r\n    V1_HANDWRITTEN_NOTES: 17,\r\n    V1_RELEASE_PROTOCOL: 18,\r\n    V1_CERTIFICATE_ORDER: 19,\r\n    V1_AUDIT_PLAN_RELEASE: 20,\r\n    V1_REQUEST_TRANSFER_AUDIT: 21,\r\n    V1_PREVIOUS_CB_REPORTS: 22,\r\n    V1_PREVIOUS_CB_EVIDENCE: 23,\r\n    V1_PREVIOUS_CB_CERTIFICATE: 24,\r\n    V1_IATF_REMOTE: 25,\r\n    V1_OTHER_DOCUMENTS: 26,\r\n    V2_ZIP_FILE: 27,\r\n    V2_CARA_REPORT_FINAL: 28,\r\n    V2_CARA_NC_REPORT_FINAL: 29,\r\n    V2_NCM_EVIDENCES: 30,\r\n    V2_RELEASE_PROTOCOL: 31,\r\n    V2_AUDIT_PLAN: 32,\r\n    V2_CARA_SPA: 33,\r\n    V2_DE_CERT: 34,\r\n    V2_OTHER_DOCUMENTS: 35,\r\n    APPROVAL_EMAIL: 36,\r\n}\r\n\r\nexport default ReportTypes;\r\n\r\n","\r\nimport { formatDate } from \"./formatDate\";\r\n\r\n\r\nexport const getCurrentDate = () => {\r\n\r\n\treturn (formatDate(new Date()));\r\n\r\n}","\r\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport downloadImage from '../assets/download-cloud-icon-15.png'\r\nimport deleteImage from '../assets/icon-delete-19.png'\r\nimport { uploadReport } from './api/uploadReport'\r\nimport { getReport } from './api/getReport';\r\nimport { downloadReport } from './api/downloadReport';\r\nimport { deleteReport } from './api/deleteReport';\r\nimport ReportType from './globals/ReportTypes.js';\r\nimport { IATFAuditContext } from './context/IATFAuditContext'\r\nimport { getCurrentDate } from './helpers/getCurrentDate';\r\nimport { getDropZoneMessage } from './helpers/getDropZoneMessage';\r\nimport { formatDate } from './helpers/formatDate';\r\n\r\n\r\nfunction FileDropZone({fileType, setZipFileName}) {\r\n\r\n\tconst dropZoneMessage = getDropZoneMessage(fileType);\r\n\r\n\tconst auditContext = useContext(IATFAuditContext);\r\n\r\n    const IATFauditID = auditContext.data.id;\r\n    const auditID = auditContext.data.auditid;\r\n\r\n\tconst [report, setReport] = useState({\r\n\t\treportID: 0,\r\n\t\tname: '',\r\n\t\tuploadDate: '',\r\n\t\ttype: 0\r\n\t})\t\r\n\r\n\tconst {reportID, name, uploadDate} = report;\t\r\n     \r\n    const onDrop = useCallback((acceptedFiles) => {\r\n\r\n\t\tacceptedFiles.forEach((file) => {\r\n\r\n\t\t\tconst resp = uploadReport(IATFauditID, auditID, fileType, file.path, file);\r\n\t\t\tresp.then( response =>{             \r\n\t\t\t\t\r\n\t\t\t\tsetReport({\r\n\t\t\t\t\treportID: response,\r\n\t\t\t\t\tname: file.path,\r\n\t\t\t\t\tuploadDate: formatDate(getCurrentDate()),\r\n\t\t\t\t\ttype: fileType\r\n\t\t\t\t});\r\n\r\n\t\t\t})\r\n\t\t\t.catch( error =>{\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t\t\r\n\t\t});\r\n      \r\n    }, [])\r\n\r\n\r\n\tuseEffect( () => {\r\n\r\n\t\t// if(name !== ''){\r\n\t\t// \treturn;\r\n\t\t// }\r\n\r\n\t\tconst resp = getReport(IATFauditID, fileType);\r\n\t\tresp.then( report => {\r\n\r\n\t\t\tsetReport({\r\n\t\t\t\treportID: report.id,\r\n\t\t\t\tname: report.name,\r\n\t\t\t\tuploadDate: report.uploadDate && formatDate(report.uploadDate),\r\n\t\t\t\ttype: report.type\r\n\t\t\t})\r\n\r\n\t\t\t// type === ReportType.AUDIT_ZIP_FILE && name != null && setZipFileName(name);\r\n\r\n\t\t\tif( name != null && (fileType === ReportType.MW_ZIP_FILE || fileType === ReportType.V1_ZIP_FILE || fileType === ReportType.V2_ZIP_FILE) ) {\r\n\t\t\t\tsetZipFileName(name);\r\n\t\t\t}\r\n\r\n\t\t})\r\n\t\t// .catch( error =>{\r\n\t\t//   console.log(\"error=\" + error);\r\n\t\t// })\r\n\r\n\t}, [name]);\r\n\r\n\tconst downloadFile = () => {\r\n\r\n\t\tif (!reportID)\r\n\t\t\treturn;\r\n\r\n\t\tconst resp = downloadReport( auditID, reportID );\r\n\t\tresp.then( response => {\r\n\r\n            const file = new Blob(\r\n                [response.data],\r\n                {type: 'application/octet-stream'}\r\n            );\r\n\r\n            const fileURL = URL.createObjectURL(file);\r\n            const a = document.getElementById('a_id');\r\n            const filename = name;\r\n            a.href = fileURL;\r\n            a.download = filename;\r\n            a.click();\r\n            window.URL.revokeObjectURL(fileURL);\r\n\r\n        });\r\n\t\t\r\n\t}\r\n\r\n\tconst deleteFile = () => {\r\n\t\t\t\t\r\n\t\tif (!reportID)\r\n\t\treturn;\r\n\t\t\r\n\t\tconst resp = deleteReport( auditID, reportID );\r\n\t\tresp.then( response => {\r\n\r\n\t\t\tsetReport({\r\n\t\t\t\treportID: 0,\r\n\t\t\t\tname: '',\r\n\t\t\t\tuploadDate: '',\r\n\t\t\t\ttype: 0\r\n\t\t\t});\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t}\r\n\r\n\tlet fileExtension = \"\";\r\n\tif( fileType === ReportType.MW_ZIP_FILE || fileType === ReportType.V1_ZIP_FILE || fileType === ReportType.V2_ZIP_FILE ) {\r\n\t\tfileExtension = \".zip\"\r\n\t}\r\n\tconst {fileRejections, getRootProps, getInputProps} = useDropzone({onDrop, maxFiles: 1, accept: fileExtension});\r\n\tconst fileRejectionsItems = fileRejections.map ( ({ file, errors }) => (\r\n\t\tconsole.log('entre al reject, rechacé al ' + file.name)\r\n\t));\r\n\r\n    const displayDropZoneMessage = (\r\n\t\t<p className=\"file-dropzone-message\">Drag 'n' drop <b>{dropZoneMessage}</b> here or click to select files</p>\r\n\t);\t\r\n\r\n\tconst displayUploadedFileDetails = (\r\n\t\t<>        \r\n\t\t\t<input title={name} value={name} className=\"file-dropzone-filename-input\" disabled />\r\n\t\t\t<input value={uploadDate} className=\"file-dropzone-filename-input\" disabled />\r\n\t\t</>\r\n\t);\r\n\r\n\r\n    return (\r\n\r\n      <div className=\"file-dropzone-container\">\r\n        <div {...getRootProps({className: 'dropzone'})}>\r\n        \t<input {...getInputProps()}  />\r\n        \t\t{displayDropZoneMessage}\r\n        </div>\r\n        <div className=\"file-dropzone-button-container\">\r\n        \t<button className=\"file-dropzone-button\" onClick={downloadFile}><img src={downloadImage} className=\"file-dropzone-button-image\" alt=\"\"/></button>          \r\n        \t<button className=\"file-dropzone-button\" onClick={deleteFile}><img src={deleteImage} className=\"file-dropzone-button-image\" alt=\"\"/></button>          \r\n        </div>\r\n        <div>\r\n\t\t\t{ displayUploadedFileDetails }\r\n        </div>\t\t\r\n      </div>\r\n\r\n    );\r\n\t\r\n  }\r\n\r\n  export default FileDropZone;","\r\nimport ReportType from '../globals/ReportTypes.js';\r\n\r\n\r\nexport const getDropZoneMessage = (fileType) => {\r\n    let message = '';\r\n\r\n    switch (fileType) {\r\n        case ReportType.MW_ZIP_FILE:\r\n            message = \"Preliminary Report ZIP File\";\r\n            break;\r\n        case ReportType.V1_ZIP_FILE:\r\n            message = \"Audit ZIP File\";\r\n            break;\r\n        case ReportType.V2_ZIP_FILE:\r\n            message = \"Final Audit Report ZIP File\";\r\n            break;\r\n        case ReportType.APPROVAL_EMAIL:\r\n            message = \"Approval e-mail File\";\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return (message);\r\n}\r\n","\r\nimport configData from \"../config/config.json\";\r\n\r\nexport const getZippedFileNames = async( IATFauditID, fileType ) => {\r\n\r\n    const url = `${configData.server_url}/api/report/zip/${IATFauditID},${fileType}`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const data = await resp.json();  \r\n\r\n    const reports = data.map( report => {\r\n\r\n        return {\r\n            id: report.id,\r\n            auditID: report.auditID,\r\n            type: report.type, \r\n            name: report.name\r\n        }\r\n\r\n    })\r\n\r\n    return(reports);\r\n}\r\n","import React from 'react'\r\nimport ReportTypes from './globals/ReportTypes'\r\n\r\nexport const ShowMWFileOptions = ({file, handleOnChange}) => {\r\n\r\n    return (\r\n        <select \r\n            id={file.id}\r\n            name={file.id}                                            \r\n            key={file.id}\r\n            className=\"form-select\"\r\n            value={file.type} \r\n            onChange={handleOnChange} >\r\n                <option value={ReportTypes.UNKNOWN}>Unknown</option>\r\n                <option value={ReportTypes.MW_QUESTIONNAIRE_OFFER}>Questionnaire for Offer Preparation</option>\r\n                <option value={ReportTypes.MW_QUESTIONNAIRE_PLANNING}>Questionnaire for Planning of IATF 16949</option>\r\n                <option value={ReportTypes.MW_CARA_REPORT_PRELIMINARY}>CARA Report Preliminary</option>\r\n                <option value={ReportTypes.MW_CARA_NC_REPORT_PRELIMINARY}>CARA NC-Report</option>  \r\n        </select>\r\n            \r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReportTypes from './globals/ReportTypes'\r\n\r\nexport const ShowV1FileOptions = ({file, handleOnChange}) => {\r\n    return (\r\n        <select \r\n            id={file.id}\r\n            name={file.id}                                            \r\n            key={file.id}\r\n            className=\"form-select\"\r\n            value={file.type} \r\n            onChange={handleOnChange} >\r\n                <option value={ReportTypes.UNKNOWN}>Unknown</option>\r\n                <option value={ReportTypes.V1_APPLICATION_EXTENDED}>Application Extended Manufacturing Site</option>\r\n                <option value={ReportTypes.V1_READINESS_PRE_CHECK}>Readiness Pre-Check</option>\r\n                <option value={ReportTypes.V1_STAGE1_AUDIT_PLAN}>Stage 1 Audit Plan</option>\r\n                <option value={ReportTypes.V1_QM_SYSTEM}>QM-System Doc-Review Input and Evaluation</option>  \r\n                <option value={ReportTypes.V1_PROCESS_OVERVIEW}>Process Overview and Performance Information</option>  \r\n                <option value={ReportTypes.V1_STAGE1_AUDIT_REPORT}>Stage 1 Audit Report</option>  \r\n                <option value={ReportTypes.V1_AUDIT_PLAN}>Audit Plan</option>  \r\n                <option value={ReportTypes.V1_CARA_RL_REPORT}>CARA RL-Report</option>  \r\n                <option value={ReportTypes.V1_SCORECARDS}>Scorecards</option>  \r\n                <option value={ReportTypes.V1_COVER_SHEET}>Cover Sheet for as well as Handwritten Notes</option>  \r\n                <option value={ReportTypes.V1_HANDWRITTEN_NOTES}>Handwritten Notes</option>  \r\n                <option value={ReportTypes.V1_RELEASE_PROTOCOL}>VETO-1 Release Protocol</option>  \r\n                <option value={ReportTypes.V1_CERTIFICATE_ORDER}>Certificate order form</option>  \r\n                <option value={ReportTypes.V1_AUDIT_PLAN_RELEASE}>Audit Plan and Release Protocol in attachment to CARA print/file</option>  \r\n                <option value={ReportTypes.V1_REQUEST_TRANSFER_AUDIT}>Request for Transfer Audit</option>  \r\n                <option value={ReportTypes.V1_PREVIOUS_CB_REPORTS}>Previous CB Reports</option>  \r\n                <option value={ReportTypes.V1_PREVIOUS_CB_EVIDENCE}>Previous CB Evidence</option>  \r\n                <option value={ReportTypes.V1_PREVIOUS_CB_CERTIFICATE}>Previous CB Certificate</option>  \r\n                <option value={ReportTypes.V1_IATF_REMOTE}>IATF Remote Audit-Application</option>  \r\n                <option value={ReportTypes.V1_OTHER_DOCUMENTS}>Other Documents/files/records</option>  \r\n        </select>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport ReportTypes from './globals/ReportTypes'\r\n\r\nexport const ShowV2FileOptions = ({file, handleOnChange}) => {\r\n    return (\r\n        <select \r\n            id={file.id}\r\n            name={file.id}                                            \r\n            key={file.id}\r\n            className=\"form-select\"\r\n            value={file.type} \r\n            onChange={handleOnChange} >\r\n                <option value={ReportTypes.UNKNOWN}>Unknown</option>\r\n                <option value={ReportTypes.V2_CARA_REPORT_FINAL}>CARA Report - final</option>\r\n                <option value={ReportTypes.V2_CARA_NC_REPORT_FINAL}>CARA NC-Report -final</option>\r\n                <option value={ReportTypes.V2_NCM_EVIDENCES}>NCM Evidences</option>\r\n                <option value={ReportTypes.V2_RELEASE_PROTOCOL}>VETO-2 Release Protocol</option>  \r\n                <option value={ReportTypes.V2_AUDIT_PLAN}>Audit Plan and Release Protocol in attachment to CARA print/file </option>  \r\n                <option value={ReportTypes.V2_CARA_SPA}>CARA SPA Report</option>\r\n                <option value={ReportTypes.V2_DE_CERT}>De-Cert-Workflow</option>  \r\n                <option value={ReportTypes.V2_OTHER_DOCUMENTS}>Other Documents/files/records</option>  \r\n        </select>\r\n    )\r\n}\r\n\r\n","\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { getZippedFileNames } from './api/getZippedFileNames';\r\nimport { saveReportDefinition } from './api/saveReportDefinition';\r\nimport { IATFAuditContext } from './context/IATFAuditContext'\r\nimport ReportTypes from './globals/ReportTypes';\r\nimport { ShowMWFileOptions } from './ShowMWFileOptions';\r\nimport { ShowV1FileOptions } from './ShowV1FileOptions';\r\nimport { ShowV2FileOptions } from './ShowV2FileOptions';\r\n\r\n\r\nexport const ShowZippedFiles = ({fileType, zipFileName}) => {\r\n\r\n    const auditContext = useContext(IATFAuditContext);\r\n\r\n    const IATFauditID = auditContext.data.id;\r\n\r\n    const [zippedFiles, setZippedFiles] = useState({\r\n        data: []\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        const resp = getZippedFileNames(IATFauditID, fileType);\r\n        resp.then( response => {\r\n            \r\n            setZippedFiles({\r\n                data: response\r\n            });\r\n            \r\n        });\r\n\r\n    }, [zipFileName]);\r\n\r\n    \r\n    const handleOnChange = (e) => {\r\n\r\n        zippedFiles.data.find( z => z.id == e.target.id ).type = parseInt( e.target.value );\r\n\r\n        setZippedFiles({\r\n            data: zippedFiles.data,\r\n        });\r\n\r\n    }\r\n\r\n\r\n    const handleSave = () => {\r\n\r\n        const resp = saveReportDefinition(IATFauditID, fileType, zippedFiles.data);\r\n        resp.then( response => {\r\n            console.log('response');\r\n            console.log(response);\r\n        });\r\n\r\n    }\r\n    \r\n    return (\r\n         \r\n        <div className={fileType === ReportTypes.MW_ZIP_FILE ? \"zipped-files\" \r\n                            : fileType === ReportTypes.V1_ZIP_FILE ? \"zipped-files-V1\" \r\n                            : \"zipped-files-V2\"\r\n                        }>\r\n            <table className=\"document-table table table-striped\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Document</td>\r\n                        <td>Type</td>\r\n                    </tr>\r\n                    {\r\n                        zippedFiles.data.map( file => (\r\n                            <tr\r\n                                key={file.id}\r\n                                >\r\n                                <td\r\n                                    key={file.id}>\r\n                                    {file.name} \r\n                                </td>\r\n                                <td>\r\n                                    {fileType === ReportTypes.MW_ZIP_FILE ? <ShowMWFileOptions file = {file} handleOnChange = {handleOnChange} /> \r\n                                    : fileType === ReportTypes.V1_ZIP_FILE ? <ShowV1FileOptions file = {file} handleOnChange = {handleOnChange} />\r\n                                    : <ShowV2FileOptions file = {file} handleOnChange = {handleOnChange} />\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                        )) \r\n                    }\r\n                </tbody>\r\n            </table>                \r\n        </div>\r\n\r\n    )\r\n}\r\n","\r\nimport React, { useState } from 'react'\r\nimport FileDropZone from './FileDropZone'\r\nimport { ShowZippedFiles } from './ShowZippedFiles';\r\nimport ReportType from './globals/ReportTypes.js';\r\n\r\nconst AuditDocumentationMWF = ( ) => {\r\n\r\n    const [zipFileName, setZipFileName] = useState(\"\");\r\n\r\n    return (\r\n        \r\n        <div className=\"audit-documentation-WF\">\r\n            <h5>Audit Documentation</h5>\r\n            <br/><br/>\r\n            <div className=\"audit-documentation-WF-dropzones-container\">\r\n                <FileDropZone \r\n                    fileType = {ReportType.MW_ZIP_FILE}\r\n                    setZipFileName = {setZipFileName}\r\n                />\r\n                <ShowZippedFiles \r\n                    fileType = {ReportType.MW_ZIP_FILE}\r\n                    zipFileName = {zipFileName}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AuditDocumentationMWF\r\n","\r\nimport { createContext } from \"react\";\r\n\r\n\r\nexport const AuditContext = createContext(null);","\r\nimport React, { useContext } from 'react'\r\nimport { AuditContext } from './context/AuditContext';\r\n\r\n\r\nconst Header = ( ) => { \r\n\r\n    const auditContext = useContext(AuditContext);\r\n\r\n    return (\r\n        <div className=\"top-bar\">\r\n            <div className=\"top-bar-title\">\r\n                Audit: {auditContext.data.customerName}, \r\n                Project #{auditContext.data.projectNumber} {auditContext.data.siteName} - {auditContext.data.auditTypeName},\r\n                Audit #{auditContext.data.id}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","\r\nimport configData from \"../config/config.json\";\r\n\r\nexport const getLog = async( id ) => {\r\n\r\n    const url = `${configData.server_url}/api/log/${id}`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const data = await resp.json();  \r\n\r\n    return {\r\n        data\r\n    };\r\n\r\n}","\r\nexport const formatDateTime = (dateStr, timeSeparator = \" \") => {\r\n\r\n\tconst formattedDate = new Date(dateStr);\r\n\tlet d = '' + formattedDate.getDate();\r\n\tlet m = '' + (formattedDate.getMonth() + 1); // JavaScript months are 0-11\r\n\tconst y = formattedDate.getFullYear();\r\n    let h = '' + formattedDate.getHours();\r\n    let mm = '' + formattedDate.getMinutes();\r\n\r\n\tif (m.length < 2) m = '0' + m;\r\n\tif (d.length < 2) d = '0' + d;\r\n    if (h.length < 2) h = '0' + h;\r\n    if (mm.length < 2) mm = '0' + mm;\r\n\r\n\t//return (m + \"/\" + d + \"/\" + y + \" \" + h + \":\" + mm);\r\n\treturn (y + \"-\" + m + \"-\" + d + timeSeparator + h + \":\" + mm);\r\n\t\r\n}\r\n\r\n","\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { getLog } from './api/getLog'\r\nimport { IATFAuditContext } from './context/IATFAuditContext'\r\nimport { formatDateTime } from './helpers/formatDateTime';\r\n\r\n\r\nconst Log = () => {\r\n\r\n    const auditContext = useContext(IATFAuditContext);\r\n    const auditID = auditContext.data.id;\r\n\r\n    const [auditList, setAuditList] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        getLog( auditID )\r\n        .then( response => {\r\n            setAuditList(response);\r\n        });\r\n    \r\n    }, [auditID])\r\n    \r\n\r\n    return (\r\n        <div className=\"log\">\r\n            <h5>Audit Log</h5>\r\n            <div className=\"log-list\">\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        {\r\n                            auditList && auditList.data.map( audit => (\r\n                                <tr key={audit.id}>\r\n                                    <td key={audit.id} height=\"30px\">\r\n                                        {audit.description} on {formatDateTime(audit.creationDate) }\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Log\r\n","\r\nimport React, { useContext, useState } from 'react'\r\nimport { updateIATFAudit } from './api/updateIATFAudit'\r\nimport IATFAuditUpdateTypes from './globals/IATFAuditUpdateTypes.js';\r\nimport { IATFAuditContext } from './context/IATFAuditContext'\r\nimport DatePicker from \"react-datepicker\";\r\nimport { formatDate } from './helpers/formatDate';\r\nimport { setStartDate } from './helpers/setStartDate';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nexport const NonConformities = ( ) => {\r\n\r\n    const auditContext = useContext(IATFAuditContext);\r\n\r\n    const [formState, setFormState] = useState({\r\n        id: auditContext.data.id,\r\n        majorncnumber: auditContext.data.majorncnumber,\r\n        minorncnumber: auditContext.data.minorncnumber,\r\n        specialauditmajordate: auditContext.data.specialauditmajordate ? formatDate(auditContext.data.specialauditmajordate) : null,\r\n    });\r\n\r\n    const {majorncnumber, minorncnumber, specialauditmajordate} = formState;\r\n\r\n    const startDate = setStartDate(specialauditmajordate);\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [e.target.name]:e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    const handleDateChange = (date) => {\r\n\r\n        const newDate = date ? formatDate(date) : null;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            specialauditmajordate:newDate\r\n        })\r\n    }\r\n\r\n    const save = () => {\r\n        const resp = updateIATFAudit( formState, IATFAuditUpdateTypes.NON_CONFORMITIES );\r\n\r\n        resp.then(saved => {\r\n            console.log('Success:', saved);\r\n            // if ( saved ){\r\n            //     var element = document.getElementById(\"save\");\r\n            //     element.classList.add(\"btn-green\");\r\n            //     element.innerHTML = 'Saved !';\r\n            // }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"non-conformities\">\r\n            <h5>Non-Conformities Record</h5>\r\n            <p><br/></p>\r\n            <div className=\"non-conformities-questions\">\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <label htmlFor=\"majorncnumber\">Number of Major Non Conformities</label>\r\n                            </td>\r\n                            <td>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"majorncnumber\" \r\n                                    name=\"majorncnumber\" \r\n                                    value={majorncnumber} \r\n                                    onChange={handleInputChange} \r\n                                    size=\"7\" \r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <label htmlFor=\"specialauditmajordate\">Special Audit date</label>\r\n                            </td>\r\n                            <td>\r\n                                <DatePicker \r\n                                    name=\"specialauditmajordate\" \r\n                                    value={specialauditmajordate} \r\n                                    selected={startDate} \r\n                                    className=\"datepicker\"                                    \r\n                                    onChange={(date) => handleDateChange(date)} \r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <label htmlFor=\"minorncnumber\">Number of Minor Non Conformities</label>\r\n                            </td>\r\n                            <td>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"minorncnumber\" \r\n                                    name=\"minorncnumber\" \r\n                                    value={minorncnumber} \r\n                                    onChange={handleInputChange} \r\n                                    size=\"7\" \r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>    \r\n            </div>\r\n            <div className=\"btn-wrapper\">\r\n                <button id=\"save\" className=\"btn-blue\" onClick={save} >SAVE</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport configData from \"../config/config.json\";\r\n\r\nexport const getLastNote = async( id ) => {\r\n\r\n    const url = `${configData.server_url}/api/note/${id}`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const data = await resp.json();  \r\n\r\n    return {\r\n        id: data.id,\r\n        auditid: data.auditID,\r\n        notes: data.notes,\r\n        creationDate: data.creationDate\r\n    };\r\n\r\n}","\r\nimport configData from \"../config/config.json\";\r\n\r\nexport const getNotes = async( id ) => {\r\n\r\n    const url = `${configData.server_url}/api/note/list/${id}`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const data = await resp.json();  \r\n\r\n    return {\r\n        data\r\n    };\r\n\r\n}","\r\nimport configData from \"../config/config.json\";\r\n\r\nexport const insertNote = async( data ) => {\r\n\r\n    console.log('data')\r\n    console.log(data)\r\n\r\n    const auditId = data.auditid;\r\n\r\n    const url = `${configData.server_url}/api/note/${ auditId }`;\r\n\r\n    const resp = await fetch( url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n    });\r\n\r\n    const response = await resp.json();\r\n\r\n    return( response );\r\n}\r\n\r\n","import { useState } from 'react';\r\nimport { formatDate } from '../helpers/formatDate';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState); \r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        \r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n\r\n    }\r\n\r\n    const handleInputCheck = ({target}) => {\r\n        \r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.checked\r\n        })\r\n\r\n    }    \r\n   \r\n    return [values, handleInputChange, handleInputCheck, reset];\r\n}","\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { getNotes } from './api/getNotes';\r\nimport { insertNote } from './api/insertNote';\r\nimport { IATFAuditContext } from './context/IATFAuditContext';\r\nimport { formatDateTime } from './helpers/formatDateTime';\r\nimport { getCurrentDateTime } from './helpers/getCurrentDateTime';\r\nimport { useForm } from './hooks/useForm';\r\n\r\n\r\nexport const AddNotes = ({show, onHide, setNote}) => {\r\n\r\n    const auditContext = useContext(IATFAuditContext);\r\n\r\n    const auditID = auditContext.data.id;\r\n    \r\n    const [formState, handleInputChange, , reset] = useForm({\r\n        id: 0,\r\n        auditid: auditID,\r\n        notes: \"\",\r\n        creationDate: getCurrentDateTime(),\r\n    });\r\n\r\n    const {notes} = formState;\r\n\r\n    const [newNote, setNewNote] = useState({\r\n        id: 0,\r\n    });\r\n\r\n    const save = () => {\r\n\r\n        const resp = insertNote( formState );\r\n        resp.then(saved => {\r\n            \r\n            console.log('Success:'+saved.id);\r\n            \r\n            setNote({\r\n                id: saved.id,\r\n                auditid: saved.auditid,\r\n                notes: saved.notes,\r\n                creationDate: saved.creationDate,\r\n            })\r\n            reset();\r\n\r\n            setNewNote({\r\n                id: saved.id,\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    const [noteList, setNoteList ] = useState();\r\n\r\n    useEffect(() => {\r\n\r\n        getNotes( auditID )\r\n        .then( response => {\r\n            setNoteList(response);\r\n        });\r\n\r\n    }, [newNote, auditID]);\r\n\r\n    \r\n    return (\r\n        <Modal \r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            show={show} \r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header>\r\n                <Modal.Title>Audit Notes</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"notes-table-container\">\r\n                    <table className=\"table primary\">\r\n                        <tbody>\r\n                            {\r\n                                noteList && noteList.data.map( note => (\r\n                                    <tr key={note.id}>\r\n                                        <td key={note.id}>\r\n                                            <p className=\"note-time\">{formatDateTime(note.creationDate)}:</p>\r\n                                            <br/>\r\n                                            <p className=\"note-description\">{note.notes}</p>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <input \r\n                    type=\"text\"\r\n                    size=\"86\"\r\n                    name=\"notes\" \r\n                    value={notes}\r\n                    placeholder=\"Enter new note here\"\r\n                    onChange={handleInputChange}\r\n                />\r\n                &nbsp;&nbsp;\r\n                <Button \r\n                    className=\"btn-blue\" \r\n                    onClick={save}>\r\n                    SAVE\r\n                </Button>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button \r\n                    className=\"btn-blue\" \r\n                    onClick={onHide}>\r\n                    CLOSE\r\n                </Button>                \r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n","\r\nimport { formatDateTime } from \"./formatDateTime\";\r\n\r\n\r\nexport const getCurrentDateTime = () => {\r\n\r\n\treturn (formatDateTime(new Date(), 'T'));\r\n\r\n}","\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { getLastNote } from './api/getLastNote';\r\nimport { IATFAuditContext } from './context/IATFAuditContext'\r\nimport { AddNotes } from './AddNotes';\r\nimport { getCurrentDate } from './helpers/getCurrentDate';\r\nimport { formatDateTime } from './helpers/formatDateTime';\r\n\r\nconst Notes = ( ) => {\r\n\r\n    const auditContext = useContext(IATFAuditContext);\r\n\r\n    const auditID = auditContext.data.id;\r\n\r\n    const [note, setNote] = useState({\r\n        id: 0,\r\n        auditid: 0,\r\n        notes: \"\",\r\n        creationDate: getCurrentDate(),\r\n    });\r\n\r\n    const {id} = note;\r\n\r\n    useEffect(() => {\r\n        \r\n        getLastNote(auditID)\r\n        .then( note => {\r\n            setNote({\r\n                id: note.id,\r\n                auditid: note.auditid,\r\n                notes: note.notes,\r\n                creationDate: formatDateTime(note.creationDate),\r\n            })\r\n        });\r\n        // .catch( console.warn('hubo un error') );\r\n    }, [id, auditID])\r\n\r\n    const [show, setShow] = useState(false);\r\n    \r\n    return (\r\n        <>\r\n\r\n            <AddNotes \r\n                show = {show}\r\n                onHide = {() => setShow(false)}\r\n                setNote = {setNote}\r\n            />\r\n\r\n            <div className=\"notes\">\r\n                <h5>Audit Notes</h5>\r\n                <div className=\"note-text\">                    \r\n                    {note.notes && `Last note created on ${formatDateTime( note.creationDate )} :` }\r\n                    <br/><br/>\r\n                    <p>{note.notes}</p>\r\n                </div>\r\n                <div className=\"btn-wrapper\">\r\n                    <button \r\n                        className=\"btn-blue\"\r\n                        variant=\"primary\"\r\n                        onClick={() => setShow(true)}\r\n                    >\r\n                        MORE\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notes\r\n","\r\nexport const IATFAuditStatus = {\r\n    SCHEDULED: 1,\r\n    IN_VETO_PROCESS: 2,\r\n    REJECTED: 3,\r\n    COMPLETED: 4\r\n}\r\n","\r\nimport React, { useContext, useState } from 'react'\r\nimport { updateIATFAudit } from './api/updateIATFAudit';\r\nimport { IATFAuditContext } from './context/IATFAuditContext'\r\nimport IATFAuditUpdateTypes from './globals/IATFAuditUpdateTypes.js';\r\nimport { IATFAuditStatus } from './globals/IATFAuditStatus';\r\n\r\nconst Status = ( ) => {\r\n\r\n    const auditContext = useContext(IATFAuditContext);\r\n\r\n    const [audit, setAudit] = useState({\r\n        id: auditContext.data.id,\r\n        status: auditContext.data.status,\r\n        statusdescription: auditContext.data.statusdescription\r\n    })\r\n\r\n    const getBackgroundColor = () => {\r\n\r\n        let backgroundColor = '#c6efce';\r\n        \r\n        if(audit.status === IATFAuditStatus.REJECTED){\r\n            backgroundColor = '#ffc7ce';\r\n        }\r\n\r\n        return backgroundColor;\r\n       \r\n    }\r\n\r\n    const handleClick = () => {\r\n\r\n        let statusDescription = '';\r\n        let statusNumber = 0;\r\n\r\n        if(audit.status === IATFAuditStatus.SCHEDULED){\r\n            statusDescription = 'In Veto Process';\r\n            statusNumber = IATFAuditStatus.IN_VETO_PROCESS;\r\n        } else if(audit.status === IATFAuditStatus.IN_VETO_PROCESS){\r\n            statusDescription = 'Rejected';\r\n            statusNumber = IATFAuditStatus.REJECTED;\r\n        } else if(audit.status === IATFAuditStatus.REJECTED){\r\n            statusDescription = 'Completed';\r\n            statusNumber = IATFAuditStatus.COMPLETED;\r\n        } else if(audit.status === IATFAuditStatus.COMPLETED){\r\n            statusDescription = 'Scheduled';\r\n            statusNumber = IATFAuditStatus.SCHEDULED;\r\n        }\r\n\r\n        setAudit({\r\n            id: audit.id,\r\n            status: statusNumber,\r\n            statusdescription: statusDescription\r\n        });        \r\n\r\n    }\r\n\r\n    console.log(audit)\r\n\r\n    const save = () => {\r\n\r\n        const IATFaudit = {\r\n            id: audit.id,\r\n            status: audit.status\r\n        }\r\n\r\n        const resp = updateIATFAudit( IATFaudit, IATFAuditUpdateTypes.STATUS );\r\n\r\n        resp.then(saved => {\r\n            \r\n            if ( saved ){\r\n                console.log('Success:', saved);\r\n\r\n                // var element = document.getElementById(\"save\");\r\n                // element.classList.add(\"btn-green\");\r\n                // element.innerHTML = 'Saved !';\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"status\" \r\n            id=\"status\"\r\n            style={{backgroundColor: getBackgroundColor()}}\r\n        >\r\n            <h5>Audit Status</h5>\r\n            <div className=\"status-text\">\r\n                <p \r\n                    id=\"status-text-label\" \r\n                    onClick={handleClick}>\r\n                        {audit.statusdescription}\r\n                </p>\r\n            </div>\r\n            <div className=\"btn-wrapper\">\r\n                <button \r\n                    id=\"save\" \r\n                    className=\"btn-blue\"\r\n                    onClick={save} >\r\n                        UPDATE\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Status\r\n","\r\nimport React, { useState } from 'react'\r\nimport FileDropZone from './FileDropZone'\r\nimport { ShowZippedFiles } from './ShowZippedFiles';\r\nimport ReportType from './globals/ReportTypes.js';\r\n\r\n\r\nconst AuditDocumentationV1 = ( ) => {\r\n\r\n\r\n    const [zipFileName, setZipFileName] = useState(\"\");\r\n\r\n    return (\r\n        <div className=\"audit-documentation-v1\">\r\n            <h5>Audit Documentation</h5>\r\n            <br/><br/>\r\n            <div className=\"audit-documentation-WF-dropzones-container\">\r\n                <FileDropZone \r\n                    fileType = {ReportType.V1_ZIP_FILE}\r\n                    setZipFileName = {setZipFileName}\r\n                />\r\n                <ShowZippedFiles \r\n                    fileType = {ReportType.V1_ZIP_FILE}\r\n                    zipFileName = {zipFileName}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AuditDocumentationV1\r\n","\r\nexport const VetoPersonTypes = {\r\n    UNKNOWN: 0,\r\n    CRITICAL_LOCATION: 1,\r\n    TO_BE_DEFINED: 2,\r\n    DEFINED_BY_GERMANY: 3\r\n}\r\n\r\nexport default VetoPersonTypes;","\r\nimport React, { useContext, useState } from 'react'\r\nimport { updateIATFAudit } from './api/updateIATFAudit';\r\nimport IATFAuditUpdateTypes from './globals/IATFAuditUpdateTypes'\r\nimport VetoPersonTypes from './globals/VetoPersonTypes';\r\nimport { IATFAuditContext } from './context/IATFAuditContext'\r\nimport DatePicker from \"react-datepicker\";\r\nimport { formatDate } from './helpers/formatDate';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { setStartDate } from './helpers/setStartDate';\r\n\r\n\r\nconst ProjectManagerReviewV1 = () => {\r\n\r\n    const IATFAudit = useContext(IATFAuditContext);\r\n\r\n    const [formState, setFormState] = useState({\r\n        id: IATFAudit.data.id,\r\n        veto1docsubmitted: IATFAudit.data.veto1docsubmitted || false,\r\n        veto1docsubmitdate: IATFAudit.data.veto1docsubmitdate ? formatDate(IATFAudit.data.veto1docsubmitdate) : null,\r\n        vetopersonname: IATFAudit.data.vetopersonname,\r\n        vetopersonemail: IATFAudit.data.vetopersonemail,\r\n        vetopersontype: IATFAudit.data.vetopersontype\r\n    });\r\n\r\n    const {veto1docsubmitted, veto1docsubmitdate, vetopersonname, vetopersonemail, vetopersontype} = formState;\r\n\r\n    const startDate = setStartDate(veto1docsubmitdate);\r\n\r\n    // useEffect( () => {\r\n        \r\n    //     getIATFAudit(auditID)\r\n    //         .then( audit => {\r\n    //             setFormState({\r\n    //                 id: audit.id,\r\n    //                 veto1docsubmitted: audit.veto1docsubmitted,\r\n    //                 veto1docsubmitdate: audit.veto1docsubmitdate,\r\n    //                 vetopersonname: audit.vetopersonname,\r\n    //                 vetopersonemail: audit.vetopersonemail,\r\n    //                 vetopersontype: audit.vetopersontype\r\n    //             })\r\n\r\n    //         });\r\n    //         // .catch( console.warn('hubo un error') );\r\n\r\n    // }, [auditID]);    \r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        // console.log(e.target.name);\r\n        // console.log(e.target.value);\r\n    \r\n        setFormState({\r\n            ...formState,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    \r\n    }\r\n\r\n    const handleCheckboxChange = (e) => {\r\n\r\n        // console.log(e.target.name);\r\n        // console.log(e.target.checked);\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [e.target.name]:e.target.checked\r\n        })\r\n\r\n    }\r\n\r\n    const handleSelectChange = (e) => {\r\n        // console.log(e.target.name);\r\n        // console.log(e.target.value);\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [e.target.name]:e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    const handleDateChange = (date) => {\r\n\r\n        const newDate = date ? formatDate(date) : null;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            veto1docsubmitdate:newDate\r\n        })\r\n    }\r\n\r\n    const save = () => {\r\n\r\n        const resp = updateIATFAudit( formState, IATFAuditUpdateTypes.PM_REVIEW_V1 );\r\n\r\n        resp.then(saved => {\r\n                console.log('Success:', saved);\r\n                // if ( saved ){\r\n                //     var element = document.getElementById(\"save\");\r\n                //     element.classList.add(\"btn-green\");\r\n                //     element.innerHTML = 'Saved !';\r\n                // }\r\n        })\r\n\r\n        // console.log('formState');\r\n        // console.log(formState);\r\n    }\r\n\r\n    return (\r\n        <div className=\"project-manager-V1-review\">\r\n            <h5>Project Manager Review</h5>\r\n            <br/>\r\n            <div className=\"project-manager-V1-review-checkboxes\">\r\n                    \r\n                <table className=\"project-manager-V1-review-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <div className=\"form-switch\">\r\n                                    <input\r\n                                        className=\"form-check-input\" \r\n                                        type=\"checkbox\" \r\n                                            id=\"veto1docsubmitted\" \r\n                                            name=\"veto1docsubmitted\"\r\n                                            checked={veto1docsubmitted}\r\n                                            onChange={handleCheckboxChange} />\r\n                                    <label htmlFor=\"veto1docsubmitted\">&nbsp;&nbsp;Documentation uploaded to SAP on&nbsp;&nbsp;</label>\r\n                                </div>\r\n                            </td>\r\n                            <td>\r\n                                <DatePicker \r\n                                    name=\"veto1docsubmitdate\" \r\n                                    value={veto1docsubmitdate} \r\n                                    selected={startDate} \r\n                                    className=\"datepicker\"                                    \r\n                                    onChange={(date) => handleDateChange(date)} />\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <table className=\"project-manager-V1-review-veto-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <label htmlFor=\"vetopersonname\">Veto Person Name</label>                            \r\n                            </td>\r\n                            <td>                            \r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"vetopersonname\" \r\n                                    name=\"vetopersonname\"\r\n                                    className=\"form-control\" \r\n                                    value={vetopersonname}\r\n                                    onChange={handleInputChange} \r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        <tr height=\"10px;\"><td></td><td></td></tr>\r\n                        <tr>\r\n                            <td>\r\n                                <label htmlFor=\"vetopersonemail\">Veto Person e-mail</label>                            \r\n                            </td>\r\n                            <td>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"vetopersonemail\" \r\n                                    name=\"vetopersonemail\" \r\n                                    className=\"form-control\" \r\n                                    value={vetopersonemail}\r\n                                    onChange={handleInputChange} />\r\n                            </td>\r\n                        </tr>\r\n                        <tr height=\"10px;\"><td></td><td></td></tr>\r\n                        <tr>\r\n                            <td>\r\n                                <label htmlFor=\"vetopersontype\">Veto Person Type</label>                            \r\n                            </td>\r\n                            <td>\r\n                                <select\r\n                                    name=\"vetopersontype\"\r\n                                    className=\"form-select\"\r\n                                    value={vetopersontype}\r\n                                    onChange={handleSelectChange} >\r\n                                    <option value={VetoPersonTypes.UNKNOWN}>Unknown</option>\r\n                                    <option value={VetoPersonTypes.CRITICAL_LOCATION}>Critical Location</option>\r\n                                    <option value={VetoPersonTypes.TO_BE_DEFINED}>To Be Defined</option>\r\n                                    <option value={VetoPersonTypes.DEFINED_BY_GERMANY}>Defined by Germany</option>\r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"btn-wrapper\">\r\n                <button \r\n                    id=\"save\" \r\n                    className=\"btn-blue\" \r\n                    onClick={save}>\r\n                        SAVE\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectManagerReviewV1\r\n","\r\nimport configData from \"../config/config.json\";\r\n\r\nexport const downloadTemplates = async( auditID ) => {\r\n    \r\n    const url = `${configData.server_url}/api/document/${auditID}`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const data = await resp.blob();  \r\n\r\n    return { data };\r\n}\r\n","\r\nimport React, { useContext } from 'react'\r\nimport downloadImage from '../assets/download-cloud-icon-15.png'\r\nimport { downloadTemplates } from './api/downloadTemplates'\r\nimport { AuditContext } from './context/AuditContext'\r\n\r\n\r\nexport const Download = ( ) => {\r\n\r\n    const auditContext = useContext(AuditContext);\r\n\r\n    const auditID = auditContext.data.id;\r\n\r\n    const getStandardTemplates = () => {\r\n        \r\n        const resp = downloadTemplates(auditID);\r\n        resp.then( response => {\r\n\r\n            const file = new Blob(\r\n                [response.data],\r\n                {type: 'application/octet-stream'}\r\n            );\r\n\r\n            const fileURL = URL.createObjectURL(file);\r\n            const a = document.getElementById('a_id');\r\n            const filename = 'IATF_templates.zip';\r\n            a.href = fileURL;\r\n            a.download = filename;\r\n            a.click();\r\n            window.URL.revokeObjectURL(fileURL);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"download-button-container\">\r\n            <button \r\n                className=\"download-button\" \r\n                onClick={getStandardTemplates}>\r\n                <img \r\n                    src={downloadImage} \r\n                    className=\"download-button-image\" \r\n                    alt=\"\" />\r\n            </button>\r\n            <br/>\r\n            Click to download templates\r\n            <a id=\"a_id\" href=\".\" hidden>this anchor is a helper to download standard template files</a>\r\n        </div>\r\n    )\r\n}\r\n\r\n","\r\nimport React from 'react'\r\nimport { Download } from './Download'\r\n\r\n\r\nexport const DownloadAuditTemplates = ( ) => {\r\n    return (\r\n        <div className=\"download-audit-templates\">\r\n            <h5>Audit Templates</h5>\r\n            <br/>\r\n            <Download />\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport configData from \"../config/config.json\";\r\n\r\nexport const getAudit = async( id ) => {\r\n\r\n    const url = `${configData.server_url}/api/audit/${id}`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const data = await resp.json();  \r\n\r\n    return {\r\n        id: data.id,\r\n        customerName: data.customerName,\r\n        projectNumber: data.projectNumber,\r\n        siteName: data.siteName,\r\n        auditTypeName: data.auditTypeName,\r\n        standardName: data.standardName,\r\n        projectManager: data.projectManager\r\n    };\r\n\r\n}","\r\nimport configData from \"../config/config.json\";\r\n\r\nexport const getIATFAudit = async( id ) => {\r\n\r\n    const url = `${configData.server_url}/api/IATFAudit/${id}`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const data = await resp.json();  \r\n\r\n    return {\r\n        id: data.id,\r\n        auditid: data.auditID,\r\n        status: data.status,\r\n        statusdescription: data.statusDescription,\r\n        ncreviewed: data.ncReviewed,\r\n        nc100solved: data.nC100Solved,\r\n        certificaterequired: data.certificateRequired,\r\n        docsubmitsap: data.docSubmitSAP,\r\n        docsubmitdate: data.docSubmitDate,\r\n        majorncnumber: data.majorNCNumber,\r\n        minorncnumber: data.minorNCNumber,\r\n        specialauditsolveddate: data.specialAuditSolvedDate,\r\n        specialauditmajordate: data.specialAuditMajorDate,\r\n        veto1docsubmitted: data.veto1DocSubmitted,\r\n        veto1docsubmitdate: data.veto1DocSubmitDate, \r\n        vetopersonname: data.vetoPersonName, \r\n        vetopersonemail: data.vetoPersonEmail, \r\n        vetopersontype: data.vetoPersonType,\r\n        veto2docsubmitted: data.veto2DocSubmitted,\r\n        veto2docsubmitdate: data.veto2DocSubmitDate, \r\n        clientncdocumentationsent: data.clientNCDocumentationSent,\r\n        vetoapproved: data.vetoApproved,\r\n        vetoapproveddate: data.vetoApprovedDate,\r\n        vetorejected: data.vetoRejected,\r\n        vetorejecteddate: data.vetoRejectedDate,\r\n        vetofeedback: data.vetoFeedback,\r\n    };\r\n}\r\n\r\n","\r\nimport React, { useContext, useState } from 'react'\r\nimport { updateIATFAudit } from './api/updateIATFAudit'\r\nimport IATFAuditUpdateTypes from './globals/IATFAuditUpdateTypes.js';\r\nimport { IATFAuditContext } from './context/IATFAuditContext'\r\nimport DatePicker from \"react-datepicker\";\r\nimport { formatDate } from './helpers/formatDate';\r\nimport { setStartDate } from './helpers/setStartDate';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nexport const RequiredInformation = ( ) => {\r\n  \r\n    const auditContext = useContext(IATFAuditContext);\r\n\r\n    const auditID = auditContext.data.id;\r\n\r\n    const [formState, setFormState] = useState({\r\n        id: auditID,\r\n        nc100solved: auditContext.data.nc100solved || false,\r\n        certificaterequired: auditContext.data.certificaterequired || false,\r\n        specialauditsolveddate: auditContext.data.specialauditsolveddate ? formatDate(auditContext.data.specialauditsolveddate) : null,\r\n    });\r\n\r\n    const {nc100solved, certificaterequired, specialauditsolveddate} = formState;\r\n\r\n    const startDate = setStartDate(specialauditsolveddate);\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [e.target.name]:e.target.checked\r\n        })\r\n\r\n    }\r\n\r\n    const handleDateChange = (date) => {\r\n\r\n        const newDate = date ? formatDate(date) : null;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            specialauditsolveddate:newDate\r\n        })\r\n    }\r\n\r\n    const save = () => {\r\n\r\n        const resp = updateIATFAudit( formState, IATFAuditUpdateTypes.INITIAL_INFORMATION );\r\n\r\n        resp.then(saved => {\r\n\r\n             console.log('Success:', saved);\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"initial-information\">\r\n            <h5>Required Information</h5>\r\n            <br/>\r\n            <div className=\"form-switch\">\r\n                <input\r\n                    className=\"form-check-input\" \r\n                    type=\"checkbox\" \r\n                    id=\"nc100solved\" \r\n                    name=\"nc100solved\" \r\n                    checked={nc100solved} \r\n                    onChange={handleInputChange}\r\n                />\r\n                <label htmlFor=\"nc100solved\">&nbsp;&nbsp;Non-conformities are 100% solved</label>\r\n            </div>\r\n            <br/>\r\n            <table width=\"100%\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <label htmlFor=\"specialauditsolveddate\">Special Audit date</label>\r\n                        </td>\r\n                        <td>\r\n\r\n                            <DatePicker \r\n                                name=\"specialauditsolveddate\" \r\n                                value={specialauditsolveddate} \r\n                                selected={startDate} \r\n                                className=\"datepicker\"                                    \r\n                                onChange={(date) => handleDateChange(date)} />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>    \r\n            <br/>\r\n            <div className=\"form-switch\">\r\n                <input \r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\" \r\n                    id=\"certificaterequired\" \r\n                    name=\"certificaterequired\" \r\n                    checked={certificaterequired} \r\n                    onChange={handleInputChange}/>\r\n                <label htmlFor=\"certificaterequired\">&nbsp;&nbsp;Certificate required</label>\r\n            </div>\r\n            <div className=\"btn-wrapper\">\r\n                <button id=\"save\" className=\"btn-blue\" onClick={save} >SAVE</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React, { useState } from 'react'\r\nimport FileDropZone from './FileDropZone'\r\nimport { ShowZippedFiles } from './ShowZippedFiles';\r\nimport ReportType from './globals/ReportTypes.js';\r\n\r\nexport const AuditDocumentationV2 = () => {\r\n\r\n    const [zipFileName, setZipFileName] = useState(\"\");\r\n\r\n    return (\r\n        <div className=\"audit-documentation-v2\">\r\n            <h5>Audit Documentation</h5>\r\n            <br/><br/>\r\n            <div className=\"audit-documentation-WF-dropzones-container\">\r\n                <FileDropZone \r\n                    fileType = {ReportType.V2_ZIP_FILE}\r\n                    setZipFileName = {setZipFileName}\r\n                />\r\n                <ShowZippedFiles \r\n                    fileType = {ReportType.V2_ZIP_FILE}\r\n                    zipFileName = {zipFileName}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React, { useContext, useState } from 'react'\r\nimport { updateIATFAudit } from './api/updateIATFAudit'\r\nimport IATFAuditUpdateTypes from './globals/IATFAuditUpdateTypes.js';\r\nimport { IATFAuditContext } from './context/IATFAuditContext'\r\nimport DatePicker from \"react-datepicker\";\r\nimport { formatDate } from './helpers/formatDate';\r\nimport { setStartDate } from './helpers/setStartDate';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nconst ProjectManagerReviewV2 = () => {\r\n\r\n    const IATFAudit = useContext(IATFAuditContext);\r\n\r\n    const auditID = IATFAudit.data.id;\r\n\r\n    const [formState, setFormState] = useState({\r\n        id: auditID,\r\n        veto2docsubmitted: IATFAudit.data.veto2docsubmitted || false,\r\n        veto2docsubmitdate: IATFAudit.data.veto2docsubmitdate ? formatDate(IATFAudit.data.veto2docsubmitdate) : null,\r\n    });\r\n\r\n    const { veto2docsubmitted, veto2docsubmitdate} = formState;\r\n\r\n    const startDate = setStartDate(veto2docsubmitdate);\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [e.target.name]:e.target.checked\r\n        })\r\n\r\n    }\r\n\r\n    const handleDateChange = (date) => {\r\n\r\n        const newDate = date ? formatDate(date) : null;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            veto2docsubmitdate:newDate\r\n        })\r\n    }\r\n\r\n    const save = () => {\r\n        const resp = updateIATFAudit( formState, IATFAuditUpdateTypes.PM_REVIEW_V2 );\r\n\r\n        resp.then(saved => {\r\n            console.log('Success:', saved);\r\n            // if ( saved ){\r\n            //     var element = document.getElementById(\"save\");\r\n            //     element.classList.add(\"btn-green\");\r\n            //     element.innerHTML = 'Saved !';\r\n            // }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"project-manager-V2-review\">\r\n            <h5>Project Manager Review</h5>\r\n            <div className=\"project-manager-WF-review-checkboxes\">\r\n                <table width=\"100%\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <div className=\"form-switch\">\r\n                                    <input \r\n                                        className=\"form-check-input\"\r\n                                        type=\"checkbox\" \r\n                                        id=\"veto2docsubmitted\" \r\n                                        name=\"veto2docsubmitted\" \r\n                                        checked={veto2docsubmitted} \r\n                                        onChange={handleInputChange}\r\n                                    />\r\n                                    <label htmlFor=\"veto2docsubmitted\">&nbsp;&nbsp;Documents already uploaded to SAP on &nbsp;&nbsp;</label>\r\n                                </div>\r\n                            </td>\r\n                            <td>\r\n                                {/* <input \r\n                                    type=\"text\"\r\n                                    name=\"veto2docsubmitdate\"\r\n                                    size=\"10\"\r\n                                    value={veto2docsubmitdate}\r\n                                    onChange={handleInputTextChange} /> */}\r\n\r\n                                <DatePicker \r\n                                    name=\"veto2docsubmitdate\" \r\n                                    value={veto2docsubmitdate} \r\n                                    selected={startDate} \r\n                                    className=\"datepicker\"                                    \r\n                                    onChange={(date) => handleDateChange(date)} \r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <br/>\r\n            <div className=\"btn-wrapper\">\r\n                <button \r\n                    id=\"save\" \r\n                    className=\"btn-blue\" \r\n                    onClick={save}\r\n                >\r\n                    SAVE\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectManagerReviewV2\r\n","\r\nimport React, { useContext, useState } from 'react'\r\nimport FileDropZone from './FileDropZone'\r\nimport ReportType from './globals/ReportTypes.js';\r\nimport { IATFAuditContext } from './context/IATFAuditContext'\r\nimport DatePicker from \"react-datepicker\";\r\nimport { formatDate } from './helpers/formatDate';\r\nimport { updateIATFAudit } from './api/updateIATFAudit';\r\nimport IATFAuditUpdateTypes from './globals/IATFAuditUpdateTypes';\r\nimport { setStartDate } from './helpers/setStartDate';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nexport const Approval = () => {\r\n\r\n    const audit = useContext(IATFAuditContext);\r\n\r\n    const auditID = audit.data.id;\r\n\r\n    const [formState, setFormState] = useState({\r\n        id: auditID,\r\n        vetoapproved: audit.data.vetoapproved || false,\r\n        vetoapproveddate: audit.data.vetoapproveddate ? formatDate(audit.data.vetoapproveddate) : null,\r\n    });\r\n\r\n    const {vetoapproved, vetoapproveddate} = formState;\r\n\r\n    const startDate = setStartDate(vetoapproveddate);\r\n    \r\n    const [setZipFileName] = useState(\"\");\r\n\r\n    const handleInputChange = (e) => {\r\n        \r\n        setFormState({\r\n            ...formState,\r\n            [e.target.name]:e.target.checked\r\n        })\r\n\r\n    } \r\n    \r\n    const handleDateChange = (date) => {\r\n        \r\n        const newDate = date ? formatDate(date) : null;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            vetoapproveddate:newDate\r\n        })\r\n\r\n    }    \r\n\r\n    const save = () => {\r\n        const resp = updateIATFAudit( formState, IATFAuditUpdateTypes.APPROVAL );\r\n\r\n        resp.then(saved => {\r\n            console.log('Success:', saved);\r\n            // if ( saved ){\r\n            //     var element = document.getElementById(\"save\");\r\n            //     element.classList.add(\"btn-green\");\r\n            //     element.innerHTML = 'Saved !';\r\n            // }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"approval\">\r\n            <h5>Approval</h5>\r\n            <br/><br/>\r\n            <div className=\"approval-container\">\r\n                <FileDropZone \r\n                    fileType = {ReportType.APPROVAL_EMAIL}\r\n                    setZipFileName = {setZipFileName}\r\n                />                \r\n                <div className=\"approval-questions\">\r\n                    <table width=\"100%\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <div className=\"form-switch\">\r\n                                        <input\r\n                                            className=\"form-check-input\" \r\n                                            type=\"checkbox\" \r\n                                            id=\"vetoapproved\"\r\n                                            name=\"vetoapproved\" \r\n                                            checked={vetoapproved}\r\n                                            onChange={handleInputChange} \r\n                                        />\r\n                                        <label htmlFor=\"vetoapproved\">&nbsp;&nbsp;Documentation approved by Veto on &nbsp;&nbsp;</label>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <DatePicker \r\n                                        name=\"vetoapproveddate\" \r\n                                        value={vetoapproveddate} \r\n                                        selected={startDate} \r\n                                        className=\"datepicker\"                                    \r\n                                        onChange={(date) => handleDateChange(date)} \r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                </div>                \r\n                <div className=\"btn-wrapper\">\r\n                    <button \r\n                        id=\"save\" \r\n                        className=\"btn-blue\" \r\n                        onClick={save} >\r\n                            SAVE\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React, { useContext } from 'react'\r\nimport IATFAuditUpdateTypes from './globals/IATFAuditUpdateTypes.js';\r\nimport { IATFAuditContext } from './context/IATFAuditContext'\r\nimport { updateIATFAudit } from './api/updateIATFAudit.js';\r\nimport { useForm } from './hooks/useForm.js';\r\n\r\nexport const InitialStepV2 = () => {\r\n\r\n    const audit = useContext(IATFAuditContext);\r\n\r\n    const auditID = audit.data.id;\r\n\r\n    const [formState, , handleInputCheck] = useForm({\r\n        id: auditID,\r\n        ncreviewed: audit.data.ncreviewed || false,\r\n        clientncdocumentationsent: audit.data.clientncdocumentationsent || false\r\n    });\r\n\r\n    const {ncreviewed, clientncdocumentationsent} = formState;\r\n\r\n    const save = () => {\r\n\r\n        const resp = updateIATFAudit( formState, IATFAuditUpdateTypes.INITIAL_STEP_V2 );\r\n\r\n        resp.then(saved => {\r\n            console.log('Success:', saved);\r\n            // if ( saved ){\r\n            //     var element = document.getElementById(\"save\");\r\n            //     element.classList.add(\"btn-green\");\r\n            //     element.innerHTML = 'Saved !';\r\n            // }\r\n        })\r\n    }    \r\n\r\n    return (\r\n        <div className=\"veto2-initial-step\">\r\n            <h5>Initial Step</h5>\r\n            <br/><br/><br/>\r\n            <div className=\"form-switch\">\r\n                <input\r\n                    className=\"form-check-input\" \r\n                    id=\"clientncdocumentationsent\" \r\n                    type=\"checkbox\" \r\n                    name=\"clientncdocumentationsent\" \r\n                    checked={clientncdocumentationsent}\r\n                    onChange={handleInputCheck} \r\n                />\r\n                <label htmlFor=\"clientncdocumentationsent\">&nbsp;&nbsp;Client sent NC documentation already</label>\r\n            </div>\r\n            <br/><br/><br/>\r\n            <div className=\"form-switch\">\r\n                <input \r\n                    className=\"form-check-input\"\r\n                    id=\"ncreviewed\" \r\n                    type=\"checkbox\" \r\n                    name=\"ncreviewed\" \r\n                    checked={ncreviewed} \r\n                    onChange={handleInputCheck}\r\n                />\r\n                <label htmlFor=\"ncreviewed\">&nbsp;&nbsp;Non-conformities were reviewed</label>\r\n            </div>\r\n            <div className=\"btn-wrapper\">\r\n                <button \r\n                    id=\"save\" \r\n                    className=\"btn-blue\" \r\n                    onClick={save}>\r\n                        SAVE\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React, { useContext } from 'react'\r\nimport { AuditContext } from './context/AuditContext';\r\n\r\n\r\nexport const AuditInformation = ( ) => {\r\n\r\n    // const [audit, setAudit] = useState({\r\n    //     data: [],\r\n    // });\r\n\r\n    // useEffect( () => {\r\n\r\n    //     getAudit(auditID)\r\n    //         .then( audit => {\r\n    //             setAudit({\r\n    //                 data: audit\r\n    //             })\r\n    //         });\r\n    //         // .catch( console.warn('hubo un error') );\r\n\r\n    // }, [auditID]);\r\n\r\n    const auditContext = useContext(AuditContext);\r\n\r\n    return (\r\n        <div className=\"audit-information\">\r\n            <h5>Audit Information</h5>            \r\n            <p>Project Number: {auditContext.data.projectNumber}</p>\r\n            <p>Client: {auditContext.data.customerName}</p>\r\n            <p>Site: {auditContext.data.siteName}</p>\r\n            <p>Audit Type: {auditContext.data.auditTypeName}</p>\r\n            <p>Standard: {auditContext.data.standardName}</p>\r\n            <p>Project Manager: {auditContext.data.projectManager}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React, { useContext, useState } from 'react'\r\nimport { IATFAuditContext } from './context/IATFAuditContext'\r\nimport { updateIATFAudit } from './api/updateIATFAudit'\r\nimport DatePicker from \"react-datepicker\";\r\nimport { formatDate } from './helpers/formatDate';\r\nimport IATFAuditUpdateTypes from './globals/IATFAuditUpdateTypes.js';\r\nimport { setStartDate } from './helpers/setStartDate';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nexport const VetoRejection = () => {\r\n\r\n    const IATFAudit = useContext(IATFAuditContext);\r\n\r\n    const auditID = IATFAudit.data.id;\r\n\r\n    const [formState, setFormState] = useState({\r\n        id: auditID,\r\n        vetorejected: IATFAudit.data.vetorejected,\r\n        vetorejecteddate: IATFAudit.data.vetorejecteddate ? formatDate(IATFAudit.data.vetorejecteddate) : null,\r\n        vetofeedback: IATFAudit.data.vetofeedback,\r\n    });\r\n\r\n    const { vetorejected, vetorejecteddate, vetofeedback } = formState;\r\n\r\n    const startDate = setStartDate(vetorejecteddate);\r\n\r\n    const handleInputTextChange = (e) => {\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [e.target.name]:e.target.value\r\n        })\r\n\r\n    }    \r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [e.target.name]:e.target.checked\r\n        })\r\n\r\n    }\r\n\r\n    const handleDateChange = (date) => {\r\n\r\n        const newDate = date ? formatDate(date) : null;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            vetorejecteddate:newDate\r\n        })\r\n    }\r\n\r\n    const save = () => {\r\n        const resp = updateIATFAudit( formState, IATFAuditUpdateTypes.REJECTION );\r\n\r\n        resp.then(saved => {\r\n            console.log('Success:', saved);\r\n            // if ( saved ){\r\n            //     var element = document.getElementById(\"save\");\r\n            //     element.classList.add(\"btn-green\");\r\n            //     element.innerHTML = 'Saved !';\r\n            // }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"rejection\">\r\n            <h5>Veto Rejection</h5>\r\n            <br/>\r\n            <div className=\"rejection-container\">\r\n                <table width=\"100%\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                            <div className=\"form-switch\">\r\n                                <input \r\n                                    type=\"checkbox\" \r\n                                    className=\"form-check-input\"\r\n                                    id=\"vetorejected\"\r\n                                    name=\"vetorejected\"\r\n                                    checked={vetorejected} \r\n                                    onChange={handleInputChange}\r\n                                />\r\n                                <label htmlFor=\"vetorejected\">&nbsp;&nbsp;Documentation rejected by Veto on&nbsp;&nbsp;</label>\r\n                                </div>\r\n                            </td>\r\n                            <td>\r\n                                <DatePicker \r\n                                    className=\"datepicker\"\r\n                                    id=\"vetorejecteddate\"\r\n                                    name=\"vetorejecteddate\"\r\n                                    value={vetorejecteddate} \r\n                                    selected={startDate} \r\n                                    onChange={(date) => handleDateChange(date)} \r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <br/>\r\n                <label htmlFor=\"vetofeedback\">Veto Feedback</label>\r\n                <div>\r\n                    <textarea \r\n                        className=\"form-control\" \r\n                        id=\"vetofeedback\"\r\n                        name=\"vetofeedback\"\r\n                        rows=\"3\"\r\n                        value={vetofeedback}\r\n                        onChange={handleInputTextChange}\r\n                    >\r\n                    </textarea>\r\n                </div>\r\n            </div>\r\n            <div className=\"btn-wrapper\">\r\n                <button \r\n                    id=\"save\" \r\n                    className=\"btn-blue\" \r\n                    onClick={save}\r\n                >\r\n                    SAVE\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport ProjectManagerReviewMWF from './ProjectManagerReviewMWF'\r\nimport AuditDocumentationMWF from './AuditDocumentationMWF'\r\nimport Header from './Header'\r\nimport Log from './Log'\r\nimport { NonConformities } from './NonConformities'\r\nimport Notes from './Notes'\r\nimport Status from './Status'\r\nimport AuditDocumentationV1 from './AuditDocumentationV1'\r\nimport ProjectManagerReviewV1 from './ProjectManagerReviewV1'\r\nimport { DownloadAuditTemplates } from './DownloadAuditTemplates'\r\nimport { AuditContext } from './context/AuditContext'\r\nimport { IATFAuditContext } from './context/IATFAuditContext'\r\nimport { getAudit } from './api/getAudit'\r\nimport { getIATFAudit } from './api/getIATFAudit'\r\nimport { RequiredInformation } from './RequiredInformation'\r\nimport { AuditDocumentationV2 } from './AuditDocumentationV2'\r\nimport ProjectManagerReviewV2 from './ProjectManagerReviewV2'\r\nimport { Approval } from './Approval'\r\nimport { InitialStepV2 } from './InitialStepV2'\r\nimport { AuditInformation } from './AuditInformation'\r\nimport { VetoRejection } from './VetoRejection'\r\n\r\n\r\nexport const MainApp = ({IATFauditID}) => {\r\n\r\n    const [IATFaudit, setIATFaudit] = useState();\r\n\r\n    const [audit, setAudit] = useState();\r\n\r\n    useEffect(() => {\r\n\r\n        getIATFAudit(IATFauditID)\r\n        .then( audit => {\r\n          \r\n            setIATFaudit({\r\n                data: audit\r\n            })\r\n\r\n            getAudit(audit.auditid)\r\n            .then( audit => {\r\n\r\n                setAudit({\r\n                    data: audit\r\n                })\r\n\r\n            });\r\n\r\n        });\r\n\r\n    }, [IATFauditID]);\r\n\r\n    const [logState, setLogState] = useState()\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"main-container\">    \r\n\r\n     \r\n\r\n                <div className=\"initial-information-label\">\r\n                    First Steps\r\n                </div>\r\n\r\n                <div className=\"miniworkflow-label\">\r\n                    Mini Workflow Process\r\n                </div>\r\n\r\n                <div className=\"veto1-label\">\r\n                    Veto 1 Process\r\n                </div>\r\n\r\n                <div className=\"veto2-label\">\r\n                    Veto 2 Process\r\n                </div>\r\n\r\n                <div className=\"approval-label\">\r\n                    Approval Process\r\n                </div>\r\n\r\n                <AuditContext.Provider value={audit}>\r\n                    { audit && <Header /> } \r\n                    { audit && <AuditInformation /> }\r\n                    { audit && <DownloadAuditTemplates /> }\r\n                </AuditContext.Provider>\r\n\r\n                <IATFAuditContext.Provider value={IATFaudit}>\r\n                    { IATFaudit && <Status /> }\r\n                    { IATFaudit && <Log /> }\r\n                    { IATFaudit && <Notes /> }\r\n\r\n                    { IATFaudit && <RequiredInformation /> }\r\n                    { IATFaudit && <AuditDocumentationMWF /> }\r\n                    { IATFaudit && <ProjectManagerReviewMWF /> }\r\n                    { IATFaudit && <NonConformities /> }\r\n                    { IATFaudit && <ProjectManagerReviewV1 /> }\r\n\r\n                    { IATFaudit && <AuditDocumentationV1 /> }\r\n                    \r\n                    { IATFaudit && <InitialStepV2 /> }\r\n                    { IATFaudit && <AuditDocumentationV2 /> }\r\n                    { IATFaudit && <ProjectManagerReviewV2 /> }\r\n                    { IATFaudit && <VetoRejection /> }\r\n\r\n                    { IATFaudit && <Approval /> }\r\n                </IATFAuditContext.Provider>\r\n\r\n            </div>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MainApp } from './components/MainApp.js';\nimport './site.css';\n\n\nconst queryParams = new URLSearchParams(window.location.search);\n\nconst id = queryParams.get('id');\n\nReactDOM.render(\n    <MainApp IATFauditID = {id} />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}